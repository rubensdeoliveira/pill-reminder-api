import {
  Body,
  Controller,
  HttpCode,
  Param,
  Put,
  UseGuards,
} from '@nestjs/common'

import { routes } from '@/_shared/constants/routes'
import {
  ParamBodySchema,
  paramValidator,
} from '@/_shared/validators/param.validation'
import { JwtGuard } from '@/auth/guards/jwt.guard'
import { Update{{Entity}}UseCase } from '@/{{entity}}/use-cases/update-{{entity}}.use-case'
import {
  Save{{Entity}}BodySchema,
  save{{Entity}}Validator,
} from '@/{{entity}}/validators/save-{{entity}}.validator'

@Controller(routes.{{entity}})
@UseGuards(JwtGuard)
// @Roles(AccountRole.DENTIST, AccountRole.ADMIN)
export class Update{{Entity}}Controller {
  constructor(private update{{Entity}}UseCase: Update{{Entity}}UseCase) {}

  @Put(':id')
  @HttpCode(200)
  async handle(
    // @CurrentAccount() account: CurrentAccountType,
    @Param(paramValidator) param: ParamBodySchema,
    @Body(save{{Entity}}Validator) data: Save{{Entity}}BodySchema,
  ) {
    const {{entity}} = await this.update{{Entity}}UseCase.execute({
      ...param,
      ...data,
    })
    return {{entity}}
  }
}
