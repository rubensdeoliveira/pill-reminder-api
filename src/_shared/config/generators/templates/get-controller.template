import { Controller, Get, HttpCode, Param, UseGuards } from '@nestjs/common'

import { routes } from '@/_shared/constants/routes'
import {
  ParamBodySchema,
  paramValidator,
} from '@/_shared/validators/param.validation'
import { JwtGuard } from '@/auth/guards/jwt.guard'
import { Get{{Entity}}UseCase } from '@/{{entity}}/use-cases/get-{{entity}}.use-case'

@Controller(routes.{{entity}})
@UseGuards(JwtGuard)
// @Roles(AccountRole.DENTIST, AccountRole.ADMIN)
export class Get{{Entity}}Controller {
  constructor(private get{{Entity}}UseCase: Get{{Entity}}UseCase) {}

  @Get(':id')
  @HttpCode(200)
  async handle(
    // @CurrentAccount() account: CurrentAccountType,
    @Param(paramValidator) param: ParamBodySchema,
  ) {
    const {{entity}} = await this.get{{Entity}}UseCase.execute(param)
    return {{entity}}
  }
}
