import { Injectable, NotFoundException } from '@nestjs/common'

import {
  Delete{{Entity}}UseCaseInput,
  Delete{{Entity}}UseCaseOutput,
} from '@/{{entity}}/dtos/delete-{{entity}}.dto'
import { {{Entity}}Repository } from '@/{{entity}}/repositories/{{entity}}.repository'

@Injectable()
export class Delete{{Entity}}UseCase {
  constructor(private {{entity}}Repository: {{Entity}}Repository) {}

  async execute({
    id,
  }: Delete{{Entity}}UseCaseInput): Promise<Delete{{Entity}}UseCaseOutput> {
    const {{entity}} = await this.{{entity}}Repository.findById({ id })

    if (!{{entity}}) {
      throw new NotFoundException('{{Entity}} not found')
    }

    await this.{{entity}}Repository.delete({ id })
  }
}
